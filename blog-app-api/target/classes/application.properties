server.port=9090

#database configuration

spring.datasource.url=jdbc:mysql://localhost:3306/blog_app_apis

spring.datasource.username=root

spring.datasource.password=ritesh123

#Spring Boot JDBC provides starter and libraries for connecting an application with JDBC.
#driver class name depends upon database
spring.datasource.dbcp2.driver-class-name=com.mysql.cj.jdbc.Driver

#Note:-dialect is a property of hibernate
#Dialect is a class that acts as a bridge between Java JDBC types and SQL types,
# which contains the mapping between java language data type and database 
#datatype. Dialect allows Hibernate to generate SQL optimized for a particular 
#relational database.

#ctrl+shift+t for searching dialect here
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
hibernate.dialect.storage_engine=innodb
spring.jpa.database-platform: org.hibernate.dialect.MySQL5InnoDBDialect


spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#if any entity is there then table automatically created

#create, update, create-drop, validate

spring.jpa.hibernate.ddl-auto=update
#update->if necessary it will create the table otherwise just update the data in table


spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
project.image=images/



#spring based security provides form based authentification by default
logging.level.org.springframework.security=DEBUG

spring.security.user.name=ritesh
spring.security.user.password=ritesh
spring.security.user.role=ADMIN



